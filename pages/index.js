import React from 'react';
import Head from 'next/head';
import { useLocalStore, useObserver } from 'mobx-react';

const StoreContext = React.createContext();

const StoreProvider = ({ children }) => {
  const store = useLocalStore(() => ({
    tasks: ['Buy milk', 'get a haircut', 'practice react'],
    addTask: (task) => {
      store.tasks.push(task);
    },
    removeTask: (taskToRemove) => {
      store.tasks = store.tasks.filter((task) => task !== taskToRemove);
    },
    get tasksCount() {
      return store.tasks.length;
    },
  }));

  return (
    <StoreContext.Provider value={store}>{children}</StoreContext.Provider>
  );
};

const TasksCount = () => {
  const store = React.useContext(StoreContext);

  return useObserver(() => <h1>{store.tasksCount} Tasks!</h1>);
};

const TasksForm = () => {
  const store = React.useContext(StoreContext);
  const [task, setTask] = React.useState('');

  return (
    <form
      onSubmit={(e) => {
        store.addTask(task);
        setTask('');
        e.preventDefault();
      }}
    >
      <input
        type='text'
        value={task}
        onChange={(e) => setTask(e.target.value)}
      />
      <button type='submit'>Add</button>
    </form>
  );
};

const TasksList = () => {
  const store = React.useContext(StoreContext);

  return useObserver(() => (
    <ul>
      {store.tasks.map((task) => (
        <li key={task}>
          <div style={{ display: 'flex', justifyContent: 'space-between' }}>
            {task}

            <button onClick={(e) => store.removeTask(task)}>X</button>
          </div>
        </li>
      ))}
    </ul>
  ));
};

export default function Home() {
  return (
    <StoreProvider>
      <Head>
        <title>Nextjs Todo List</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main
        style={{
          display: 'grid',
          alignItems: 'center',
          justifyContent: 'center',
          textAlign: 'center',
        }}
      >
        <TasksForm />
        <TasksCount />
        <TasksList />
      </main>
    </StoreProvider>
  );
}
